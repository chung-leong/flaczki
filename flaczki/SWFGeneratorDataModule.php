<?php

abstract class SWFGeneratorDataModule {

	// update policies
	protected $allowedDeviceFonts;
	protected $maintainOriginalFontSize;
	protected $allowAnyEmbeddedFont;
	
	// export policies
	protected $ignoreAutogenerated;
	protected $ignorePointText;
	
	protected $persistentData;
	
	public function __construct($moduleConfig, &$persistentData) {
		$this->allowedDeviceFonts = isset($moduleConfig['device-fonts']) ? $moduleConfig['device-fonts'] : array();
		$this->maintainOriginalFontSize = isset($moduleConfig['maintain-font-size']) ? $moduleConfig['maintain-font-size'] : false;
		$this->allowedDeviceFonts = isset($moduleConfig['use-any-embedded-font']) ? $moduleConfig['use-any-embedded-font'] : true;
		$this->ignoreAutogenerated = isset($moduleConfig['ignore-autogenerated']) ? $moduleConfig['ignore-autogenerated'] : true;
		$this->ignorePointText = isset($moduleConfig['ignore-point-text']) ? $moduleConfig['ignore-point-text'] : false;
		$this->persistentData =& $persistentData;
	}

	public function checkChanges() {
		return true;
	}
	
	public function startTransfer() {
		return true;
	}
	
	public function finishTransfer() {
		return true;
	}
	
	public function updateText($textObjects, $fontFamilies) {
		return array();
	}
	
	public function cleanUp() {
	}
	
	public function validate() {
	}

	public function getUpdateType() {
		return 'text';
	}
	
	public function getExportType() {
		return null;
	}
	
	public function getExportFileExtension() {
		return null;
	}
	
	public function exportText(&$output, $textObjects, $fontFamilies) {
	}
	
	public function exportImages(&$output, $images) {
	}
	
	public function getRequiredPHPExtensions() {
		return array();
	}
	
	public function getModuleSpecificParameters() {
		return array();
	}
	
	public function runModuleSpecificOperation($parameters) {
		return false;
	}
}

?>